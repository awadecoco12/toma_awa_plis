import pickle
from ursina import *
from ursina import scene, application
from ursina.prefabs.first_person_controller import FirstPersonController


app = Ursina()

inventory = []

class Voxel(Button):
    def __init__(self, position=(0, 0, 0)):
        super().__init__(
            parent=scene,
            position=position,
            model='cube',
            origin_y=0.5,
            texture='white_cube',
            color=color.color(0, 0, random.uniform(0.9, 1.0)),
            highlight_color=color.lime,
        )

    def input(self, key):
        if self.hovered:
            if key == 'left mouse down':
                voxel = Voxel(position=self.position + mouse.normal)
                self.collect_item()

            if key == 'right mouse down':
                destroy(self)

    def collect_item(self):
        item_name = f'Block{int(self.position.x)}_{int(self.position.z)}'
        inventory.append(item_name)
        print(f'Collected: {item_name}')

class CustomFirstPersonController(FirstPersonController):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)

    def place_block(self):
        if inventory:
            block_name = inventory[-1]
            new_position = self.position + mouse.normal
            voxel = Voxel(position=new_position)
            print(f'Placed: {block_name} at {new_position}')
            inventory.pop()

def quit_game():
    application.quit()

class MainMenu(Entity):
    def __init__(self, start_game_callback, quit_game_callback):
        super().__init__()

        self.title = Text(
            text='My Game',
            color=color.white,
            scale=2,
            y=0.2
        )

        self.start_button = Button(
            text='Play',
            color=color.azure,
            scale=0.1,
            y=-0.1,
            on_click=start_game_callback
        )

        self.quit_button = Button(
            text='Quit',
            color=color.azure,
            scale=0.1,
            y=-0.3,
            on_click=quit_game_callback
        )

    def hide(self):
        self.title.disable()
        self.start_button.disable()
        self.quit_button.disable()

def start_actual_game():
    player = CustomFirstPersonController()
    for z in range(8):
        for x in range(8):
            voxel = Voxel(position=(x, 0, z))

def start_game():
    main_menu.hide()
    start_actual_game()

main_menu = MainMenu(start_game, quit_game)

def update():
    if held_keys['q']:
        quit_game()

app.run()
